spring:
  application:
    name: AuthService
  datasource:
    url: jdbc:postgresql://postgres-db:5432/auth_service
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:

    health:
      show-details: always

server:
  port: 6001

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instanceId: ${spring.application.name}:${random.uuid}

# Docker service URLs
#user:
#  service:
#    url: http://users-service:6002
#    grpc-port: 6102
#services:
#  list: billing
#  base-url: http://billing-service:6003

jwt:
  secret: NWI4eUJFSE1iUWVUaFdtWnE0dDZ3OXpDRkpOY1JmVWpYbjJyNXU4eEFER0thUGRTZ1ZrWQ==
  expiration: 86400000

resilience4j:
  circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        ignore-exceptions:
          - com.nexxserve.authservice.exception.UserAlreadyExistsException
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  timelimiter:
    instances:
      userService:
        timeoutDuration: 5s
        cancelRunningFuture: true

#logging:
#  file:
#    name: /var/log/spring-app/auth-service.log
#  level:
#    root: INFO
#    com.nexxserve.authservice: DEBUG



